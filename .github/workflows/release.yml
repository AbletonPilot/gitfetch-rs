name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: gitfetch-rs
            asset_name: gitfetch-rs-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: gitfetch-rs
            asset_name: gitfetch-rs-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: gitfetch-rs
            asset_name: gitfetch-rs-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: gitfetch-rs
            asset_name: gitfetch-rs-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: gitfetch-rs.exe
            asset_name: gitfetch-rs-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          name: ${{ matrix.asset_name }}

  publish-cargo:
    name: Publish to Cargo
    needs: build-release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'AbletonPilot'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true
